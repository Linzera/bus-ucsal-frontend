{"version":3,"sources":["utilis/api.js","utilis/consts.js","components/CardItem.js","utilis/formatter.js","components/MainCard.js","views/Home.js","components/Header.js","components/Map.js","views/Localizacao.js","views/Roteiro.js","App.js","serviceWorker.js","index.js"],"names":["fetchHorarios","fetch","concat","method","headers","Content-Type","roteirosTypes","CardItem","props","_props$data","data","horario","roteiro","react_default","a","createElement","className","style","display","margin","flexDirection","alignItems","justifyContent","roteiroFormatado","href","data-toggle","data-placement","title","roteiroFormater","padding","type","onClick","window","location","MainCard","state","isIssuing","horarioData","handleBusInfo","_callee","regenerator_default","wrap","_context","prev","next","then","results","json","date","Date","map","item","horarioSplitado","split","horarioItem","horarioAtual","getHours","getMinutes","parseInt","_this","setState","prevState","Object","toConsumableArray","stop","this","renderBusInfo","CardItem_CardItem","key","_ref2","flex","defineProperty","Component","Home","marginTop","marginBottom","MainCard_MainCard","React","HeaderApp","MapContainer","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","dist","google","initialCenter","lat","lng","zoom","onMarkerClick","name","GoogleApiWrapper","apiKey","Localizacao","Map","Roteiro","call","match","params","id","App","Header","Switch","Route","path","exact","component","Boolean","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf8bd952.chunk.js","sourcesContent":["\r\nconst API_URL = \"http://192.168.15.1:8080/novaucsal-busucsal/api\"\r\n\r\n\r\n\r\nexport const fetchHorarios = () => fetch(`${API_URL}/bus/businfo`, {\r\n    method: 'GET', headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\n\r\n\r\n","\r\nexport const roteirosTypes = {\r\n    ROTEIRO: \"ROTEIRO\",\r\n    ROTEIRO2: \"ROTEIRO2\",\r\n    ROTEIRO3: \"ROTEIRO3\",\r\n    ROTEIRO4: \"ROTEIRO4\",\r\n    ROTEIRO5: \"ROTEIRO5\"\r\n}\r\n\r\nexport const GOOGLE_API_KEY = \"AIzaSyBevV1S2mnml8aIHgdlwqNfBmh4X6k0C2U\";","import React from \"react\";\r\nimport \"../App.css\"\r\nimport { roteiroFormater } from \"../utilis/formatter\";\r\n\r\nexport const CardItem = (props) => {\r\n\r\n    const { horario, roteiro } = props.data;\r\n\r\n    return (\r\n        <div className=\"itemCard\" style={{ display: 'flex', margin: 20, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <div className=\"info\" style={{ margin: 20 }}>\r\n                <h1 className=\"display-2\">{horario} </h1>\r\n                {roteiroFormater(roteiro)}\r\n            </div>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <button style={{ padding: 10, margin: 10 }} type=\"button\" className=\"btn btn-primary\" onClick={() => window.location.href='/localizacao'}>Localizar bus!</button>\r\n                <button style={{ padding: 10, margin: 10 }} type=\"button\" className=\"btn btn-success\">Me notificar!</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport { roteirosTypes } from './consts';\r\n\r\nexport const roteiroFormater = (roteiro) => {\r\n\r\n    let roteiroFormatado = <a>Link</a>;\r\n\r\n    switch (roteiro) {\r\n\r\n        case roteirosTypes.ROTEIRO:\r\n            roteiroFormatado = <a href=\"/roteiro/1\" className=\"badge badge-secondary\"\r\n                data-toggle=\"tooltip\" data-placement=\"right\" title=\"Clique para conhecer o roteiro!\">Roteiro 1</a>;\r\n            break;\r\n        case roteirosTypes.ROTEIRO2:\r\n            roteiroFormatado = <a href=\"/roteiro/2\" className=\"badge badge-secondary\"\r\n                data-toggle=\"tooltip\" data-placement=\"right\" title=\"Clique para conhecer o roteiro!\">Roteiro 2</a>;\r\n            break;\r\n        case roteirosTypes.ROTEIRO3:\r\n            roteiroFormatado = <a href=\"/roteiro/3\" className=\"badge badge-secondary\"\r\n                data-toggle=\"tooltip\" data-placement=\"right\" title=\"Clique para conhecer o roteiro!\">Roteiro 3</a>;\r\n            break;\r\n        case roteirosTypes.ROTEIRO4:\r\n            roteiroFormatado = <a href=\"/roteiro/4\" className=\"badge badge-secondary\"\r\n                data-toggle=\"tooltip\" data-placement=\"right\" title=\"Clique para conhecer o roteiro!\">Roteiro 4</a>;\r\n            break;\r\n        case roteirosTypes.ROTEIRO5:\r\n            roteiroFormatado = <a href=\"/roteiro/5\" className=\"badge badge-secondary\"\r\n                data-toggle=\"tooltip\" data-placement=\"right\" title=\"Clique para conhecer o roteiro!\">Roteiro 5</a>;\r\n            break;\r\n\r\n    }\r\n\r\n    return roteiroFormatado;\r\n\r\n}","import React, { Component } from 'react'\r\nimport { fetchHorarios } from '../utilis/api';\r\nimport { CardItem } from './CardItem'\r\n\r\nexport default class MainCard extends Component {\r\n\r\n    state = { isIssuing: true, horarioData: [] }\r\n\r\n    handleBusInfo = async () => {\r\n\r\n        fetchHorarios()\r\n            .then(results => {\r\n                return results.json()\r\n            })\r\n            .then(data => {\r\n\r\n                let date = new Date();\r\n\r\n                data.map((item) => {\r\n\r\n                    let horarioSplitado = item.horario.split(':');\r\n                    let horarioItem = horarioSplitado[0] + horarioSplitado[1];\r\n\r\n                    let horarioAtual = `${date.getHours()}${date.getMinutes()}`;\r\n\r\n                    if (parseInt(horarioItem) >= parseInt(horarioAtual)) {\r\n\r\n                        this.setState(prevState => ({\r\n                            horarioData: [...prevState.horarioData, item]\r\n                        }))\r\n\r\n                    }\r\n\r\n                })\r\n\r\n\r\n\r\n            }).then(() => {\r\n                this.setState({ isIssuing: false })\r\n            })\r\n\r\n    }\r\n\r\n    renderBusInfo = () => {\r\n\r\n        return this.state.horarioData.map((item) => {\r\n            return <CardItem key={item.horario} data={item} />\r\n        }\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleBusInfo()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"card\" style={{ display: 'flex', flex: 1, alignItems: 'center', alignItems: 'stretch', textAlign: 'center' }}>\r\n                <div className=\"card-body\" style={{ display: 'flex', flexDirection: 'column', }}>\r\n                    <div className=\"col\" style={{ flex: 0.2 }}>\r\n                        <h3 >Proximos horarios!</h3>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        {this.state.isIssuing ? <h1>Carregando...</h1> : this.renderBusInfo()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport '../App.css';\r\nimport MainCard from \"../components/MainCard\";\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container centered\">\r\n                <div className=\"col\" style={{ marginTop: 50, marginBottom: 50 }}>\r\n                    <MainCard />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\n\r\nconst HeaderApp = () => (\r\n  <div className=\"navbar navbar-dark bg-dark shadow-sm\">\r\n    <div className=\"container d-flex justify-content-between\">\r\n      <a className=\"navbar-brand d-flex align-items-center\">\r\n        <strong className=\"text-light\">Bus Ucsal</strong>\r\n      </a>\r\n      <a href=\"/\" className=\"navbar-brand d-flex align-items-center\">\r\n        <strong className=\"text-light\">Informacoes</strong>\r\n      </a>\r\n      <a href=\"/localizacao\" className=\"navbar-brand d-flex align-items-center\">\r\n        <strong className=\"text-light\">Localizacao do bus</strong>\r\n      </a>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default HeaderApp","import React from 'react';\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport { GOOGLE_API_KEY } from \"../utilis/consts\"\r\n\r\nexport class MapContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Map google={this.props.google} initialCenter={{\r\n        lat: -12.946036,\r\n        lng: -38.413762\r\n      }} zoom={14}>\r\n\r\n        <Marker onClick={this.onMarkerClick}\r\n          name={'BusUcsal'} />\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: GOOGLE_API_KEY\r\n})(MapContainer)\r\n\r\n","import React from 'react';\r\nimport Map from '../components/Map'\r\n\r\nexport default class Localizacao extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ justifyContent: 'center', alignItems: 'center' }}><Map google={window.google} /></div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Roteiro extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            roteiro: this.props.match.params.id\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Roteiro {this.state.roteiro}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './views/Home';\nimport Header from './components/Header'\nimport { Switch, Route } from 'react-router-dom';\nimport Localizacao from './views/Localizacao';\nimport Roteiro from './views/Roteiro';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact={true} component={Home} />\n          <Route path=\"/localizacao\" exact={true} component={Localizacao} />\n          <Route path=\"/roteiro/:id\" component={Roteiro} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter>\n    <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}